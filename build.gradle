plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

// Java 버전 설정 (Toolchain을 사용하여 JDK 20으로 설정)
java {
    // toolchain {
    //     languageVersion = JavaLanguageVersion.of(20)
    // }
    // sourceCompatibility와 targetCompatibility는 toolchain에 의해 설정될 수 있지만,
    // 명시적으로 설정하여 호환성을 보장하는 것이 좋습니다.
    sourceCompatibility = JavaVersion.VERSION_20
    targetCompatibility = JavaVersion.VERSION_20
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// Lombok  설정
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

// Lombok 테스트용 설정(TEST코드에 사용할 수 있게 포함)
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}
